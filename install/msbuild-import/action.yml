name: Enable the Vernuntii MSBuild Integration system-wide in subsequent MSBuild calls

description: |
  Enables Vernuntii MSBuild Integration system-wide. That is achieved with the MSBuild
  Integration targets file that gets automatically imported in subsequent MSBuild calls.

inputs:
  binary:
    default: "vernuntii"
    description: Binary to use Vernuntii
    required: false
  property:
    # https://docs.microsoft.com/en-US/visualstudio/msbuild/customize-your-build?view=vs-2022#customize-all-net-builds
    # https://blog.postsharp.net/post/under-the-hood-of-msbuild-integration.html
    default: CustomBeforeMicrosoftCommonProps
    description: MSBuild property name to populate with "Vernuntii"-.targets file location
    required: false
  verbosity:
    default: ""
    description: "See console executable help for more informations"
    required: false
  config-path:
    default: ""
    description: "See console executable help for more informations"
    required: false
  cache-id:
    default: ""
    description: "The cache id is used to cache the version informations once and load them on next accesses"
    required: false
  cache-creation-retention-time:
    default: ""
    description: "The cache retention time since creation"
    required: false
  cache-last-access-retention-time:
    default: ""
    description: "The cache retention time since last access"
    required: false
  empty-caches:
    default: ""
    description: "Indicates that the caches should be emptied where version informations are stored. This happens before the cache process itself"
    required: false
  msbuild-integration-package-name:
    default: "Vernuntii.Console.MSBuild.Orphan"
    description: ""
    required: false
  msbuild-integration-package-version:
    default: ""
    description: ""
    required: false
  msbuild-integration-package-source:
    default: ""
    description: "Use this input when you want to define a custom NuGet-specific package source when the Vernuntii MSBuild integration is about to be downloaded"
    required: false

runs:
  using: composite
  steps:
    - id: args
      run: |
        [ ! -x "$(which ${{ inputs.binary }})" ] \
        && echo "Binary '${{ inputs.binary }}' does not exist or is not executable" >&2 \
        && exit 1

        # Customizations for "Vernuntii"-.targets file

        VERNUNTII_BINARY=(${{ inputs.binary }})
        [ '${{ inputs.verbosity }}' != '' ] && VERNUNTII_BINARY+=(--verbosity \"${{ inputs.verbosity }}\")
        VERNUNTII_BINARY="${VERNUNTII_BINARY[*]}"

        echo \"${{ inputs.msbuild-integration-package-source }}\"

        VERNUNTII_MSBUILD_LOCATE_ARGS=("--download-package")
        [ '${{ inputs.msbuild-integration-package-name }}' != '' ] && VERNUNTII_MSBUILD_LOCATE_ARGS+=(--package-name \"${{ inputs.msbuild-integration-package-name }}\")
        [ '${{ inputs.msbuild-integration-package-version }}' != '' ] && VERNUNTII_MSBUILD_LOCATE_ARGS+=(--package-version \"${{ inputs.msbuild-integration-package-version }}\")
        [ '${{ inputs.msbuild-integration-package-source }}' != '' ] && VERNUNTII_MSBUILD_LOCATE_ARGS+=(--package-source '"${{ inputs.msbuild-integration-package-source }}"')
        VERNUNTII_MSBUILD_LOCATE_ARGS="${VERNUNTII_MSBUILD_LOCATE_ARGS[*]}"

        write_github_env() {
          echo "$1=$2" >> $GITHUB_ENV
        }

        write_github_env "${{ inputs.property }}" "$(eval $VERNUNTII_BINARY msbuild-integration locate AutoImportTargets $VERNUNTII_MSBUILD_LOCATE_ARGS)"
        write_github_env VernuntiiMSBuildIntegrationAssemblyFile "$(eval $VERNUNTII_BINARY msbuild-integration locate MSBuildTaskDll $VERNUNTII_MSBUILD_LOCATE_ARGS)"
        write_github_env VernuntiiConsoleExecutableFile "$(eval $VERNUNTII_BINARY locate ConsoleDll)"

        # Further "Vernuntii"-.targets customizations
        [ '${{ inputs.verbosity }}' != '' ] && write_github_env VernuntiiVerbosity "${{ inputs.verbosity }}"
        [ '${{ inputs.config-path }}' != '' ] && write_github_env VernuntiiConfigPath "${{ inputs.config-path }}"
        [ '${{ inputs.cache-id }}' != '' ] && write_github_env VernuntiiCacheId "${{ inputs.cache-id }}"
        [ '${{ inputs.cache-creation-retention-time }}' != '' ] && write_github_env VernuntiiCacheCreationRetentionTime "${{ inputs.cache-creation-retention-time }}"
        [ '${{ inputs.cache-last-access-retention-time }}' != '' ] && write_github_env VernuntiiCacheLastAccessRetentionTime "${{ inputs.cache-last-access-retention-time }}"
        [ '${{ inputs.empty-caches }}' != '' ] && echo VernuntiiEmptyCaches "${{ inputs.empty-caches }}"

        exit 0

      shell: bash
